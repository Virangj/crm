<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no" name="viewport">
    <title>New Booking | (MFS TRAVELS)</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
    <!-- Quill JS -->
    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>

    <script src="/public/assets/js/custom.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
        integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        #editor-container {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 10px;
            background-color: #f9f9f9;
            overflow: auto;
            /* Allows scrollbars for overflowing content */
            resize: both;
            /* Enables resizing */
            min-height: 150px;
            /* Minimum height */
            min-width: 300px;
            /* Minimum width */
            max-height: 500px;
            /* Optional maximum height */
            max-width: 1100px;
            /* Optional maximum width */
        }

        body {
            background-image: url('/assets/img/banner/formbg.png');
            /* Change this to the path of your PNG image */
            background-size: cover;
            /* Cover the entire viewport */
            background-repeat: no-repeat;
            /* Prevent tiling */
            background-position: center;
            /* Center the image */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            /* Full viewport height */
            margin: 0;
            /* Remove default margin */
        }

        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .step-indicator div {
            width: 100%;
            text-align: center;
            position: relative;
            padding: 10px;
            border: 1px solid transparent;
            border-radius: 5px;
            /* Rounded corners */
            cursor: pointer;
            /* Change cursor to pointer */
        }

        .step-indicator .active {
            background-color: #6777ef;
            /* Green background for active step */
            color: white;
            /* White text for active step */
        }

        .step-indicator .completed {
            color: green;
            /* Green text for completed steps */
            font-weight: bold;
            /* Bold text for completed steps */
        }

        .step {
            display: none;
        }

        .step.active {
            display: block;
        }

        .box-control {
            box-shadow: 4px 4px 48px 22px rgba(0, 0, 0, 0.1);
            background: #f8f9fa;
            border-radius: 15px;
        }

        .next {
            background: #6777ef;
            color: white;
            padding: 5px 25px 5px 25px;
        }
    </style>
</head>

<body>
    <div class="container mt-5 " style="width: 50%;">
        <div class="col-12 p-3 box-control">
            <h5 class="justify-content-center d-flex text-danger">New Booking <p class="text-dark">(Email draft)</p>
            </h5>
            <div class="step-indicator" style="background-color: antiquewhite;">
                <div id="step1-indicator" class="active">Price Description</div>
                <div id="step2-indicator">Card Information</div>
                <div id="step3-indicator">Header</div>
                <div id="step4-indicator">Passenger</div>
                <div id="step5-indicator">Itinerary</div>
            </div>

            <form id="multiStepForm">
                <!-- Step 1 -->
                <div class="step active" id="step1">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label>Total Amount Quoted</label>
                                <input type="text" oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                    class="form-control" id="total-quoted" placeholder="Enter the amount" required>
                            </div>
                            <div class="form-group">
                                <label>MCO Description</label>
                                <select class="form-control" required id="mco_description">
                                    <option value="" disabled selected>Choose an option</option>
                                    <option value="my_fly_support">My Fly Support</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Airline Name</label>
                                <div id="airline-names">
                                    <div class="input-group mb-2">
                                        <input type="text" id="airline_name" class="form-control airline-name"
                                            placeholder="Airline Name">
                                        <input type="text" id="airline_cost"
                                            oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                            class="form-control airline-cost" placeholder="Cost">
                                    </div>
                                </div>
                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-link " id="add-airline">Add Airline</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label>Type of Charge</label>
                                <select class="form-control" required>
                                    <option value="" disabled selected>Choose an option</option>
                                    <option value="single">Single</option>
                                    <option value="split">Split</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>MCO (auto calculated)</label>
                                <input type="text" class="form-control" id="mco-calculated" disabled>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn next">Next</button>
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="step" id="step2">
                    <div class="row">
                        <div class="col-4">
                            <div class="form-group">
                                <label>Card Number</label>
                                <input type="text" class="form-control" maxlength="16" id="cardNumber" required
                                    oninput="this.value = this.value.replace(/[^0-9]/g, ''); detectCardType();">
                                <p id="cardTypeOutput"></p>
                            </div>
                            <div class="form-group">
                                <label>Card Type</label>
                                <select class="form-control" required>
                                    <option value="" disabled selected>Choose an option</option>
                                    <option value="Amex">Amex</option>
                                    <option value="Visa">Visa</option>
                                    <option value="Discover">Discover</option>
                                    <option value="Master">Master</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Currency</label>
                                <select class="form-control" required>
                                    <option value="USD" selected>USD</option>
                                    <option value="CAD">CAD</option>
                                    <option value="GBP">GBP</option>
                                    <option value="EUR">EUR</option>
                                    <option value="AUD">AUD</option>
                                    <option value="MXN">MXN</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label>Expiration (MM/YY)</label>
                                <input type="text" class="form-control" maxlength="5" required>
                            </div>
                            <div class="form-group">
                                <label>CVV</label>
                                <input type="number" class="form-control" maxlength="3" required>
                            </div>
                            <div class="form-group">
                                <label>GDS/PNR (Optional)</label>
                                <input type="text" maxlength="6" class="form-control">
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label>ARL/Confirmation</label>
                                <input type="text" class="form-control" maxlength="6">
                            </div>
                            <div class="form-group">
                                <label>Email</label>
                                <input type="email" class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label>Billing Phone</label>
                                <input type="text" class="form-control" required>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary prev mx-2">Previous</button>
                        <button type="button" class="btn next">Next</button>
                    </div>
                </div>

                <!-- Step 3 -->
                <div class="step" id="step3">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label>Subject Line</label>
                                <input type="text" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-8">
                            <div class="form-group">
                                <label>Card Holder Name</label>
                                <input type="text" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label>Select TFN</label>
                                <select class="form-control">
                                    <option value="offline">Offline</option>
                                    <option value="online" selected>Online</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Billing Address </label>
                                <input type="text" class="form-control" required>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary prev mx-2">Previous</button>
                        <button type="button" class="btn next">Next</button>
                    </div>
                </div>

                <!-- Step 4 -->
                <div class="step" id="step4">
                    <h3>Passenger Details</h3>
                    <div id="passenger-details">
                        <div class="row passenger-row">
                            <div class="col-4 form-group">
                                <label>Full Name</label>
                                <input type="text" class="form-control" required>
                            </div>
                            <div class="col-2 form-group">
                                <label>DOB</label>
                                <input type="date" class="form-control" required>
                            </div>
                            <div class="col-2 form-group">
                                <label>Gender</label>
                                <select class="form-control" required>
                                    <option value="" disabled selected>Choose an option</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Others">Others</option>
                                </select>
                            </div>
                            <div class="col-2 form-group">
                                <label>Ticket No.</label>
                                <input type="text" class="form-control">
                            </div>
                            <div class="col-2 form-group">
                                <label></label>
                                <button type="button" class="btn btn-danger remove-passenger"
                                    style="margin-top: 31px;">Remove</button>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button class="btn btn-link mb-2" id="add-passenger">Add Passenger</button>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary prev mx-2">Previous</button>
                        <button type="button" class="btn next">Next</button>
                    </div>
                </div>

                <!-- Step 5 -->
                <div class="step" id="step5">
                    <h3>Itinerary Details</h3>
                    <div id="image">
                        <div class="row image-row">
                            <div class="col-6 form-group">
                                <label>Image</label>
                                <input type="file" id="itineraryImage" class="form-control" accept="image/*" required>
                                <small class="form-text text-muted">Please upload a valid image file (e.g., PNG, JPG).</small>
                            </div>
                            <div class="col-2 form-group">
                                <label></label>
                                <button type="button" class="btn btn-danger remove-image"
                                    style="margin-top: 31px;">Remove</button>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button class="btn btn-link mb-2" id="addImage">Add Image</button>
                    </div>
                    <div class="d-flex justify-content-end mt-2">
                        <button type="button" class="btn btn-secondary prev mx-2">Previous</button>
                        <button type="submit" class="btn btn-success" id="formsubmit">Submit</button>
                    </div>
                    
                    <!-- <h3>Itinerary Details</h3>
                    <div class="form-group addimage">
                        <label for="itineraryImage">Upload Itinerary Image</label>
                        <input type="file" id="itineraryImage" class="form-control" accept="image/*" required>
                        <small class="form-text text-muted">Please upload a valid image file (e.g., PNG, JPG).</small>
                    </div>
                    <div class="preview mt-3">
                        <img id="imagePreview" src="#" alt="Image Preview" style="max-width: 100%; display: none;">
                    </div>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-link mb-2" id="add-image">Add Image</button>
                    </div>

                    <div class="d-flex justify-content-end mt-2">
                        <button type="button" class="btn btn-secondary prev mx-2">Previous</button>
                        <button type="submit" class="btn btn-success" id="formsubmit">Submit</button>
                    </div> -->
                </div>
            </form>
        </div>
    </div>


    <script>
        function detectCardType() {
            const cardNumberInput = document.getElementById('cardNumber');
            const cardTypeOutput = document.getElementById('cardTypeOutput');

            const cardNumber = cardNumberInput.value.trim();
            let cardType = 'Unknown Card Type';

            // Card type detection logic
            if (/^4/.test(cardNumber)) {
                cardType = 'Visa';
            } else if (/^5[1-5]/.test(cardNumber)) {
                cardType = 'MasterCard';
            } else if (/^3[47]/.test(cardNumber)) {
                cardType = 'American Express';
            } else if (/^6(?:011|5)/.test(cardNumber)) {
                cardType = 'Discover';
            } else if (/^3(?:0[0-5]|[68])/.test(cardNumber)) {
                cardType = 'Diners Club';
            } else if (/^35/.test(cardNumber)) {
                cardType = 'JCB';
            }

            // Display detected card type
            cardTypeOutput.textContent = cardType;
            if (cardType == "Unknown Card Type") {
                cardTypeOutput.style.color = 'red'
            } else {
                cardTypeOutput.style.color = 'green'
            }
        }

        // Attach event listener (if not using inline oninput)
        const cardNumberInput = document.getElementById('cardNumber');
        cardNumberInput.addEventListener('input', detectCardType);
    </script>
    <script>
        document.addEventListener('DOMContentLoaded',function(){
            const addImagedDetails = document.getElementsById('image');
            const addImageButton = document.getElementById('addImage');

            const newImageInputContainer = document.createElement('div');
            newImageInputContainer.classList.add('image-input-container');
            
            const newImageInput = document.createElement('input');
            newImageInput.type = 'file';
            newImageInput.name = 'image';
            newImageInput.accept = 'image/*';

            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.classList.add('remove-image-button');
            removeButton.textContent = 'Remove';
            
            // Append the file input and remove button to the container
            newImageInputContainer.appendChild(newImageInput);
            newImageInputContainer.appendChild(removeButton);

            // Append the new input container to the image container
            document.getElementById('image-container').appendChild(newImageInputContainer);

            // Add event listener to remove button
            removeButton.addEventListener('click', function() {
                newImageInputContainer.remove();  // Remove the corresponding input field
            });
        })
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const passengerDetailsContainer = document.getElementById('passenger-details');
            const addPassengerButton = document.getElementById('add-passenger');

            // Add new passenger row
            addPassengerButton.addEventListener('click', function () {
                const newPassengerRow = document.querySelector('.passenger-row').cloneNode(true);
                newPassengerRow.querySelectorAll('input, select').forEach(input => input.value = ''); // clear all the input fields
                passengerDetailsContainer.appendChild(newPassengerRow);
            });

            // Remove passenger row
            passengerDetailsContainer.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-passenger')) {
                    const row = e.target.closest('.passenger-row');
                    if (passengerDetailsContainer.children.length > 1) {
                        row.remove();
                    } else {
                        alert('You must have at least one passenger.');
                    }
                }
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            localStorage.removeItem('airline_default');
            
            const totalQuotedInput = document.getElementById('total-quoted');
            const mcoCalculatedInput = document.getElementById('mco-calculated');
            let InputCount = 0;
            
            let airlinesData = {};

            const defaultNameInput = document.getElementById('airline_name');
            const defaultCostInput = document.getElementById('airline_cost');

            totalQuotedInput.addEventListener('input', calculateMCO);

            // Function to update airlinesData when name changes
            function handleNameChange(nameInput, costInput) {
                const newName = nameInput.value.trim();
                const oldName = nameInput.dataset.previousName;
                const cost = costInput.value.trim();

                // If there was a previous name, remove it
                if (oldName && oldName in airlinesData) {
                    delete airlinesData[oldName];
                }

                // Add new name if both name and cost exist
                if (newName && cost) {
                    airlinesData[newName] = cost;
                    nameInput.dataset.previousName = newName;
                }

                localStorage.setItem('airline_default', JSON.stringify(airlinesData));
                calculateMCO();
            }

            defaultNameInput.addEventListener('blur', function() {
                handleNameChange(this, defaultCostInput);
            });

            defaultCostInput.addEventListener('blur', function() {
                const name = defaultNameInput.value.trim();
                if (name) {
                    airlinesData[name] = this.value.trim();
                    localStorage.setItem('airline_default', JSON.stringify(airlinesData));
                    calculateMCO();
                }
            });

            function calculateMCO() {
                const totalQuoted = parseFloat(totalQuotedInput.value) || 0;
                let totalAirlineCost = 0;

                Object.values(airlinesData).forEach(cost => {
                    totalAirlineCost += parseFloat(cost) || 0;
                });

                const mcoValue = totalQuoted - totalAirlineCost;
                mcoCalculatedInput.value = mcoValue.toFixed(2);
            }

            document.getElementById('add-airline').addEventListener('click', function () {
                InputCount++;
                
                const inputGroup = document.createElement('div');
                inputGroup.className = 'input-group mb-2';
                inputGroup.id = `airline_group_${InputCount}`;
                 
                inputGroup.innerHTML = `
                    <input type="text" class="form-control airline-name" id="airline_name_${InputCount}" 
                        placeholder="Airline Name" style="margin-right: 10px;">
                    <input type="text" class="form-control airline-cost" id="airline_cost_${InputCount}" 
                        placeholder="Cost" oninput="this.value = this.value.replace(/[^0-9]/g, '');" style="margin-right: 10px;">
                    <button type="button" class="btn btn-danger remove-airline">❌</button>
                `;

                document.getElementById('airline-names').appendChild(inputGroup);

                const nameInput = inputGroup.querySelector('.airline-name');
                const costInput = inputGroup.querySelector('.airline-cost');

                nameInput.addEventListener('blur', function() {
                    handleNameChange(this, costInput);
                });

                costInput.addEventListener('blur', function() {
                    const name = nameInput.value.trim();
                    if (name) {
                        airlinesData[name] = this.value.trim();
                        localStorage.setItem('airline_default', JSON.stringify(airlinesData));
                        calculateMCO();
                    }
                });
            });

            document.addEventListener('click', function(e) {
                if (e.target.classList.contains('remove-airline')) {
                    const group = e.target.closest('.input-group');
                    const nameInput = group.querySelector('.airline-name');
                    
                    if (nameInput.value.trim() in airlinesData) {
                        delete airlinesData[nameInput.value.trim()];
                        localStorage.setItem('airline_default', JSON.stringify(airlinesData));
                    }
                    
                    group.remove();
                    calculateMCO();
                }
            });

            calculateMCO();
        });
    </script>


    <script>
        document.getElementById('multiStepForm').addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent default form submission

            let total_quoted = document.getElementById('total-quoted').value;
            let mco_description = document.getElementById('mco_description').value;
            let mco_calculated = document.getElementById('mco-calculated').value;
            
            // Get all airline data from localStorage
            let airlinesData = JSON.parse(localStorage.getItem('airline_default') || '{}');

            // Create arrays for airline names and costs
            let airline_names = [];
            let airline_costs = [];
            
            // Convert airlinesData object to arrays
            Object.entries(airlinesData).forEach(([name, cost]) => {
                if (name && cost) {  // Only add if both name and cost exist
                    airline_names.push(name);
                    airline_costs.push(cost);
                }
            });

            $.ajax({
                url: "/newBookingForm",
                method: "post",
                dataType: "json",
                data: { 
                    total_amount: total_quoted,
                    mco_description: mco_description,
                    mco_calculated: mco_calculated,
                    airline_names: airline_names,   
                    airline_costs: airline_costs
                },
                success: function (res) {
                    console.log("Success:", res);
                    // Optionally redirect or show success message
                    if (res.success) {
                        alert('Form submitted successfully!');
                        // window.location.href = '/success-page'; // Redirect if needed
                    }
                },
                error: function (error) {
                    console.log("Error:", error);
                    alert('Error submitting form. Please try again.');
                }
            });
        });
    </script>   

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('multiStepForm');
            const steps = form.querySelectorAll('.step');
            const nextButtons = form.querySelectorAll('.next');
            const prevButtons = form.querySelectorAll('.prev');
            let currentStep = 0;

            // Update step indicators
            function updateStepIndicators() { 
                const indicators = document.querySelectorAll('.step-indicator div');
                indicators.forEach((indicator, index) => {
                    indicator.classList.remove('active', 'completed');
                    if (index === currentStep) {
                        indicator.classList.add('active');
                    } else if (index < currentStep) {
                        indicator.classList.add('completed');
                    }
                });
            }

            // Show current step
            function showStep(stepIndex) {
                steps.forEach((step, index) => {
                    step.classList.remove('active');
                    if (index === stepIndex) {  
                        step.classList.add('active');
                    }
                });
                updateStepIndicators();
            }

            // Next button click handler
            nextButtons.forEach(button => {
                button.addEventListener('click', () => {
                    if (currentStep < steps.length - 1) {
                        currentStep++;
                        showStep(currentStep);
                    }
                });
            });

            // Previous button click handler
            prevButtons.forEach(button => {
                button.addEventListener('click', () => {
                    if (currentStep > 0) {
                        currentStep--;
                        showStep(currentStep);
                    }
                });
            });

            // Initialize first step
            showStep(currentStep);
        });
    </script>
    <script>
        document.getElementById("multiStepForm").addEventListener("submit", async (e) => {
            
        });
        async function callAjax (settings) {
            try {
                const response = await $.ajax(
                    settings
                )
            } catch (error) {
                console.log("Error Calling Ajax: " + error);
                throw error;
            }
        }
    </script>

</body>

</html>